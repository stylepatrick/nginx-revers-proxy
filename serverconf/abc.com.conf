server {
    listen       80;
    listen       [::]:80;
    server_name  abc.com;

    root   /usr/share/nginx/html/abc.com;
    index  index.html;

    access_log  /var/log/nginx/access.abc.com_http.log;
    error_log   /var/log/nginx/error.abc.com_http.log error;

    proxy_set_header  Host              $http_host;
    proxy_set_header  X-Real-IP         $remote_addr;
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  Connection        "";
    proxy_http_version                  1.1;
    proxy_max_temp_file_size            0;
    proxy_set_header X-Forwarded-Proto  $scheme;

    large_client_header_buffers  4  128k;
    proxy_buffer_size               128k;
    proxy_buffers                4  256k;
    proxy_busy_buffers_size         256k;

    # Redirect everything else to HTTPS
    #location / {
    #    return 302 https://$server_name$request_uri;
    #}

    return 302 https://$server_name$request_uri;
}

server {
    listen       443 ssl http2;
    server_name  abc.com;

    root   /usr/share/nginx/html/abc.com;
    index  index.html;

    access_log  /var/log/nginx/access.abc.com_https.log;
    error_log   /var/log/nginx/error.abc.com_https.log error;
    error_page 404 /404.html;
    error_page 502 /502.html;

    proxy_set_header  Host               $http_host;
    proxy_set_header  X-Real-IP          $remote_addr;
    proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto  $scheme;
    proxy_set_header  Connection         ""; # Clear for keepalive
    proxy_hide_header  "X-Frame-Options";
    proxy_max_temp_file_size  0;
    proxy_http_version        1.1;
    proxy_buffering           off;
    proxy_request_buffering   off;

    # WebSocket support
    #proxy_set_header Upgrade     $http_upgrade;
    #proxy_set_header Connection  "upgrade";

    http2_max_field_size   128k;
    http2_max_header_size  128k;

    large_client_header_buffers  4  128k;
    proxy_buffer_size               128k;
    proxy_buffers                4  256k;
    proxy_busy_buffers_size         256k;

    #### HTTPS security settings https://cipherli.st/ #####
    ssl_certificate            /etc/nginx/pki/star.cer;
    ssl_certificate_key        /etc/nginx/pki/star.key;
    ssl_password_file          /etc/nginx/pki/star.pwd;
    ssl_protocols              TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers  on;
    ssl_dhparam                /etc/nginx/pki/dhparam.pem; # openssl dhparam -out dhparam.pem 4096
    ssl_ciphers                ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_ecdh_curve             secp384r1; # Requires nginx >= 1.1.0
    ssl_session_timeout        10m;
    ssl_session_cache          shared:SSL:10m;
    ssl_session_tickets        off; # Requires nginx >= 1.5.9
    ssl_stapling               on; # Requires nginx >= 1.3.7
    ssl_stapling_verify        on; # Requires nginx => 1.3.7
    add_header                 Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header                 X-Content-Type-Options nosniff;
    add_header                 X-XSS-Protection "1; mode=block";


    ############################
    ###        Errors        ###
    ############################


    ### 404 errors ###
    location = /404.html {
      root /usr/share/nginx/html/errorpages;
    }

    ### 502 errors ###
    location = /502.html {
      root /usr/share/nginx/html/errorpages;
    }


    ###########################
    ###    Applications     ###
    ###########################


	# Reverse Proxy example
    location / {
        proxy_pass http://abc.com:8020;
    }

    ### ABC Application ###
    location /ABC/ {
        #rewrite ^/ABC/(.*)$ /$1 break; -> delete /ABC context before routing only necessary if application runs with a context differenc than /ABC
        proxy_pass http://abc.com:port/ABC/;
    }
	
	### Reves routing to different server ###
	location /SERVER2/ {
        proxy_pass http://server2:8581/SERVER2/;
    }


}
